id:						(input_box)
info:						(input_box)
	name:					(input_box)
	author:					(input_box)
	severity:				(Checkbox)(info,high,medium,critical,low,unknown)
	description:				(input_box)
	reference:				(input_box)
	classification:				(input_box)
		cvss-metrics:			(input_box)
		cvss-score:			(input_box)
		cve-id:				(input_box)
		cwe-id:				(input_box)
	metadata:				(input_box)
		verified:			(Checkbox)(true,false)
        fofa-query:				(input_box)
		google-query:			(input_box)
		shodan-query:			(input_box)
	tags:					(input_box)

workflows;
	template:				(input_box)
	subtemplates:				(input_box)
		template:			(input_box)
	matchers:				(input_box)
		name:				(input_box)

variables:
	a1:					(input_box)
	a2:					(input_box)

file:
	extensions:				!(input_box)[default include](3g2,3gp,7z,apk,arj,avi,axd,bmp,css,csv,deb,dll,doc,drv,eot,exe,flv,gif,gifv,gz,h264,ico,iso,jar,jpeg,jpg,lock,m4a,m4v,map,mkv,mov,mp3,mp4,mpeg,mpg,msi,ogg,ogm,ogv,otf,pdf,pkg,png,ppt,psd,rar,rm,rpm,svg,swf,sys,tar,tar.gz,tif,tiff,ttf,txt,vob,wav,webm,wmv,woff,woff2,xcf,xls,xlsx,zip)
		type:				(input_box)
		name:				(input_box)
		regex:				(input_box)
	denylist:				!(input_box)[default include](3g2,3gp,7z,apk,arj,avi,axd,bmp,css,csv,deb,dll,doc,drv,eot,exe,flv,gif,gifv,gz,h264,ico,iso,jar,jpeg,jpg,lock,m4a,m4v,map,mkv,mov,mp3,mp4,mpeg,mpg,msi,ogg,ogm,ogv,otf,pdf,pkg,png,ppt,psd,rar,rm,rpm,svg,swf,sys,tar,tar.gz,tif,tiff,ttf,txt,vob,wav,webm,wmv,woff,woff2,xcf,xls,xlsx,zip)

dns:
    name: 					(input_box)
    type: 					(Checkbox)(A, NS, CNAME, SOA, PTR, MX, TXT, AAAA)
    class: 
    recursion:					(Checkbox)(true,false) 
    retries: 					(input_box)
    matchers:
	type:					(input_box)
        words:					(input_box)
        condition:				(Checkbox)(and,or)

network:
	inputs:
		data:				(input_box)
	host:					(input_box)
	read-size:				(input_box)

matchers:
	status:					(input_box)
	size:					(input_box)
	regex:					(input_box)
	word:					(input_box)
	type:					(input_box)
	binary:					(input_box)
	condition:				(Checkbox)(and,or)
	part:					(input_box)
	dsl:					(input_box)

headless:
	steps:
		args:
			url:			(input_box)
			by:			(Checkbox)(xpath)
			xpath:			(input_box)
			value:			(input_box)
			code:			(input_box)
		action:				(Checkbox)(click,rightclick,text,screenshot,time,select,files,waitload,getresource,extract,setmethod,addheader,setheader,deleteheader,setbody,waitevent,keyboard,debug,sleep)

requests:					(input_box)
	raw:				
		POST:				(input_box)
		Host:				(input_box)
		Authorization:			(input_box)
		Origin:				(input_box)
		Content-Type:			(input_box)
		Content-Length:			(input_box)
		Transfer-Encoding:		(input_box)
		X-Requested-With:		(input_box)
		Accept-Encoding:		(input_box)
		Referer:			(input_box)
		timezone:			(input_box)
	race:					(Checkbox)(true,false)
	race_count:				(input_box)
	unsafe:					(Checkbox)(true,false)
	pipeline				(Checkbox)(true,false)
	pipeline-concurrent-connections:	(input_box)
	pipeline-requests-per-connections:	(input_box)
	matchers-condition:			(input_box)
	matchers:				(input_box)
		type:				(input_box)
		part:				(input_box)
		words:				(input_box)
			
		type:				(input_box)
		part:				(input_box)
		words:				(input_box)

		type:				(input_box)
		part:				(input_box)
		words:				(input_box)

		type:				(input_box)
		status:				(input_box)
		
		type:				(input_box)
		dsl:				(input_box)

	extractors:
		type:				(input_box)
		name:				(input_box)
		part:				(input_box)
		regex:				(input_box)
		kval:				(input_box)
		xpath:				(input_box)
		json:				(input_box)
		dsl:				(input_box)
		group:				(input_box)

requests:					(input_box)
	method:(GET)				(input_box)
	path:					(input_box)
	redirects:				(Checkbox)(true,false)
	max-redirects:				(input_box)
	stop-at-first-match:			(input_box)
	headers:				(input_box)
		User-Agent:			(input_box)
		Origin:				(input_box)
		Content-Type:			(input_box)
		cmd:				(input_box)
	body:					(input_box)
	payloads:			
		paths:				(input_box)
		header:				(input_box)
		password:			(input_box)
	threads:				(input_box)
	attack:					(input_box)
	params:					(input_box)
	cookie-reuse:				(Checkbox)(true,false)
	matchers-condition:			(input_box)
	matchers:			
		type:				(input_box)
		words:				(input_box)

		type:				(input_box)
		regex:				(input_box)
		
		type:				(input_box)
		status				(input_box)
		